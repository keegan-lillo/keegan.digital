# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
}

"Node Interface"
interface Node {
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type Directory implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason : "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  children: [Node!]!
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type DirectoryConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  nodes: [Directory!]!
  pageInfo: PageInfo!
  sum(field: DirectoryFieldsEnum!): Float
  totalCount: Int!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

type DirectoryGroupConnection {
  edges: [DirectoryEdge!]!
  field: String!
  fieldValue: String
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type File implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason : "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  "Returns the first child node of type ImageSharp or null if there are no children of given type on this node"
  childImageSharp: ImageSharp
  "Returns the first child node of type MarkdownRemark or null if there are no children of given type on this node"
  childMarkdownRemark: MarkdownRemark
  children: [Node!]!
  "Returns all children nodes filtered by type ImageSharp"
  childrenImageSharp: [ImageSharp]
  "Returns all children nodes filtered by type MarkdownRemark"
  childrenMarkdownRemark: [MarkdownRemark]
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  "Copy file to static directory and return public url to it"
  publicURL: String
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type FileConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  nodes: [File!]!
  pageInfo: PageInfo!
  sum(field: FileFieldsEnum!): Float
  totalCount: Int!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type FileGroupConnection {
  edges: [FileEdge!]!
  field: String!
  fieldValue: String
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharp implements Node {
  children: [Node!]!
  fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
  fluid(
    background: String = "rgba(0,0,0,1)",
    base64Width: Int,
    cropFocus: ImageCropFocus = ATTENTION,
    duotone: DuotoneGradient,
    fit: ImageFit = COVER,
    grayscale: Boolean = false,
    jpegProgressive: Boolean = true,
    jpegQuality: Int,
    maxHeight: Int,
    maxWidth: Int,
    pngCompressionSpeed: Int = 4,
    pngQuality: Int,
    quality: Int,
    rotate: Int = 0,
    sizes: String = "",
    "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
    srcSetBreakpoints: [Int] = [],
    toFormat: ImageFormat = AUTO,
    toFormatBase64: ImageFormat = AUTO,
    traceSVG: Potrace,
    trim: Float = 0.0,
    webpQuality: Int
  ): ImageSharpFluid
  gatsbyImageData(
    """

    If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    """
    aspectRatio: Float,
    "Options to pass to sharp when generating AVIF images."
    avifOptions: AVIFOptions,
    "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
    backgroundColor: String,
    "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
    blurredOptions: BlurredOptions,
    """

    Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    It will never generate any images larger than the source.
    """
    breakpoints: [Int],
    """

    The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    formats: [ImageFormat],
    """

    The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
    The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
    matching the aspect ratio of the source image.
    """
    height: Int,
    "Options to pass to sharp when generating JPG images."
    jpgOptions: JPGOptions,
    """

    The layout for the image.
    FIXED: A static image sized, that does not resize according to the screen width
    FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    """
    layout: ImageLayout = CONSTRAINED,
    """

    A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
    Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
    and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
    """
    outputPixelDensities: [Float],
    """

    Format of generated placeholder image, displayed while the main image loads.
    BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    TRACED_SVG: a low-resolution traced SVG of the image.
    NONE: no placeholder. Set "background" to use a fixed background color.
    """
    placeholder: ImagePlaceholder,
    "Options to pass to sharp when generating PNG images."
    pngOptions: PNGOptions,
    "The default quality. This is overridden by any format-specific options"
    quality: Int,
    """

    The "sizes" property, passed to the img tag. This describes the display size of the image.
    This does not affect the generated images, but is used by the browser to decide which images to download.
    You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    does not actually span the full width of the screen, in which case you should pass the correct size here.
    """
    sizes: String,
    "Options for traced placeholder SVGs. You also should set placeholder to \"TRACED_SVG\"."
    tracedSVGOptions: Potrace,
    "Options to pass to sharp to control cropping and other image manipulations."
    transformOptions: TransformOptions,
    "Options to pass to sharp when generating WebP images."
    webpOptions: WebPOptions,
    """

    The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
    Ignored if layout = FLUID.
    """
    width: Int
  ): JSON!
  id: ID!
  internal: Internal!
  original: ImageSharpOriginal
  parent: Node
  resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  sum(field: ImageSharpFieldsEnum!): Float
  totalCount: Int!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

type ImageSharpFixed {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

type ImageSharpFluid {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type ImageSharpGroupConnection {
  edges: [ImageSharpEdge!]!
  field: String!
  fieldValue: String
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpOriginal {
  height: Float
  src: String
  width: Float
}

type ImageSharpResize {
  aspectRatio: Float
  height: Int
  originalName: String
  src: String
  tracedSVG: String
  width: Int
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

type MarkdownHeading {
  depth: Int
  id: String
  value: String
}

type MarkdownRemark implements Node {
  children: [Node!]!
  excerpt(format: MarkdownExcerptFormats = PLAIN, pruneLength: Int = 140, truncate: Boolean = false): String
  excerptAst(pruneLength: Int = 140, truncate: Boolean = false): JSON
  fields: MarkdownRemarkFields
  fileAbsolutePath: String
  frontmatter: MarkdownRemarkFrontmatter
  headings(depth: MarkdownHeadingLevels): [MarkdownHeading]
  html: String
  htmlAst: JSON
  id: ID!
  internal: Internal!
  parent: Node
  rawMarkdownBody: String
  tableOfContents(absolute: Boolean = false, heading: String, maxDepth: Int, pathToSlugField: String = ""): String
  timeToRead: Int
  wordCount: MarkdownWordCount
}

type MarkdownRemarkConnection {
  distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
  edges: [MarkdownRemarkEdge!]!
  group(field: MarkdownRemarkFieldsEnum!, limit: Int, skip: Int): [MarkdownRemarkGroupConnection!]!
  max(field: MarkdownRemarkFieldsEnum!): Float
  min(field: MarkdownRemarkFieldsEnum!): Float
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  sum(field: MarkdownRemarkFieldsEnum!): Float
  totalCount: Int!
}

type MarkdownRemarkEdge {
  next: MarkdownRemark
  node: MarkdownRemark!
  previous: MarkdownRemark
}

type MarkdownRemarkFields {
  childrenGlob: String
  orgId: String
  slug: String
  sourceInstanceName: String
  template: String
}

type MarkdownRemarkFrontmatter {
  images: [MarkdownRemarkFrontmatterImages]
  link: MarkdownRemarkFrontmatterLink
  logo: MarkdownRemarkFrontmatterLogo
  order: Int
  organization: String
  quote: MarkdownRemarkFrontmatterQuote
  section: String
  subProjects: [MarkdownRemarkFrontmatterSubProjects]
  tags: [String]
  technology: [String]
  template: String
  title: String
  titleAndLogo: Boolean
}

type MarkdownRemarkFrontmatterImages {
  alt: String
  caption: String
  image: File
}

type MarkdownRemarkFrontmatterLink {
  text: String
  url: String
}

type MarkdownRemarkFrontmatterLogo {
  dark: File
  light: File
}

type MarkdownRemarkFrontmatterQuote {
  author: String
  content: String
}

type MarkdownRemarkFrontmatterSubProjects {
  description: String
  images: [MarkdownRemarkFrontmatterSubProjectsImages]
  title: String
}

type MarkdownRemarkFrontmatterSubProjectsImages {
  alt: String
  caption: String
  image: File
}

type MarkdownRemarkGroupConnection {
  edges: [MarkdownRemarkEdge!]!
  field: String!
  fieldValue: String
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type MarkdownWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type PageInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

type Query {
  allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
  allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
  allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
  allMarkdownRemark(filter: MarkdownRemarkFilterInput, limit: Int, skip: Int, sort: MarkdownRemarkSortInput): MarkdownRemarkConnection!
  allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
  allSiteFunction(filter: SiteFunctionFilterInput, limit: Int, skip: Int, sort: SiteFunctionSortInput): SiteFunctionConnection!
  allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
  allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
  directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
  file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, childMarkdownRemark: MarkdownRemarkFilterInput, children: NodeFilterListInput, childrenImageSharp: ImageSharpFilterListInput, childrenMarkdownRemark: MarkdownRemarkFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
  imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
  markdownRemark(children: NodeFilterListInput, excerpt: StringQueryOperatorInput, excerptAst: JSONQueryOperatorInput, fields: MarkdownRemarkFieldsFilterInput, fileAbsolutePath: StringQueryOperatorInput, frontmatter: MarkdownRemarkFrontmatterFilterInput, headings: MarkdownHeadingFilterListInput, html: StringQueryOperatorInput, htmlAst: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, rawMarkdownBody: StringQueryOperatorInput, tableOfContents: StringQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MarkdownWordCountFilterInput): MarkdownRemark
  site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
  siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
  siteFunction(absoluteCompiledFilePath: StringQueryOperatorInput, apiRoute: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, matchPath: StringQueryOperatorInput, originalFilePath: StringQueryOperatorInput, parent: NodeFilterInput, relativeCompiledFilePath: StringQueryOperatorInput): SiteFunction
  sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, context: SitePageContextFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, matchPath: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
  sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
}

type Site implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  host: String
  id: ID!
  internal: Internal!
  parent: Node
  pathPrefix: String
  polyfill: Boolean
  port: Int
  siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type SiteBuildMetadataConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  totalCount: Int!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
  edges: [SiteBuildMetadataEdge!]!
  field: String!
  fieldValue: String
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  nodes: [Site!]!
  pageInfo: PageInfo!
  sum(field: SiteFieldsEnum!): Float
  totalCount: Int!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

type SiteFunction implements Node {
  absoluteCompiledFilePath: String!
  apiRoute: String!
  children: [Node!]!
  id: ID!
  internal: Internal!
  matchPath: String
  originalFilePath: String!
  parent: Node
  relativeCompiledFilePath: String!
}

type SiteFunctionConnection {
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  edges: [SiteFunctionEdge!]!
  group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  sum(field: SiteFunctionFieldsEnum!): Float
  totalCount: Int!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

type SiteFunctionGroupConnection {
  edges: [SiteFunctionEdge!]!
  field: String!
  fieldValue: String
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteGroupConnection {
  edges: [SiteEdge!]!
  field: String!
  fieldValue: String
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePage implements Node {
  children: [Node!]!
  component: String!
  componentChunkName: String!
  componentPath: String
  context: SitePageContext
  id: ID!
  internal: Internal!
  internalComponentName: String!
  isCreatedByStatefulCreatePages: Boolean
  matchPath: String
  parent: Node
  path: String!
  pluginCreator: SitePlugin
  pluginCreatorId: String
}

type SitePageConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  sum(field: SitePageFieldsEnum!): Float
  totalCount: Int!
}

type SitePageContext {
  childrenGlob: String
  orgId: String
  slug: String
  sourceInstanceName: String
  template: String
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

type SitePageGroupConnection {
  edges: [SitePageEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePlugin implements Node {
  browserAPIs: [String]
  children: [Node!]!
  id: ID!
  internal: Internal!
  name: String
  nodeAPIs: [String]
  packageJson: SitePluginPackageJson
  parent: Node
  pluginFilepath: String
  pluginOptions: SitePluginPluginOptions
  resolve: String
  ssrAPIs: [String]
  version: String
}

type SitePluginConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  sum(field: SitePluginFieldsEnum!): Float
  totalCount: Int!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

type SitePluginGroupConnection {
  edges: [SitePluginEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePluginPackageJson {
  dependencies: [SitePluginPackageJsonDependencies]
  description: String
  devDependencies: [SitePluginPackageJsonDevDependencies]
  keywords: [String]
  license: String
  main: String
  name: String
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  version: String
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

type SitePluginPluginOptions {
  allExtensions: Boolean
  base64Width: Int
  codegen: Boolean
  codegenConfig: SitePluginPluginOptionsCodegenConfig
  cssLoaderOptions: SitePluginPluginOptionsCssLoaderOptions
  defaultQuality: Int
  delimiters: [String]
  documentPaths: [String]
  failOnError: Boolean
  fileName: String
  isTSX: Boolean
  jsxPragma: String
  maxWidth: Int
  modulePath: String
  name: String
  path: String
  pathCheck: Boolean
  plugins: [SitePluginPluginOptionsPlugins]
  prettier: Boolean
  rel: String
  stripMetadata: Boolean
  svgo: Boolean
  target: String
  typeCheck: Boolean
}

type SitePluginPluginOptionsCodegenConfig {
  maybeValue: String
  skipTypename: Boolean
}

type SitePluginPluginOptionsCssLoaderOptions {
  esModule: Boolean
  localIdentName: String
  modules: SitePluginPluginOptionsCssLoaderOptionsModules
}

type SitePluginPluginOptionsCssLoaderOptionsModules {
  namedExport: Boolean
}

type SitePluginPluginOptionsPlugins {
  browserAPIs: [String]
  id: String
  name: String
  nodeAPIs: [String]
  pluginFilepath: String
  pluginOptions: SitePluginPluginOptionsPluginsPluginOptions
  resolve: String
  version: String
}

type SitePluginPluginOptionsPluginsPluginOptions {
  maxWidth: Int
  rel: String
  target: String
}

type SiteSiteMetadata {
  author: SiteSiteMetadataAuthor
  description: String
  siteName: String
  siteUrl: String
  title: String
}

type SiteSiteMetadataAuthor {
  email: String
  name: String
  url: String
}

enum DirectoryFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum FileFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___excerptAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___fields___childrenGlob @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___fields___orgId @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___fields___slug @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___fields___sourceInstanceName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___fields___template @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___fileAbsolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___frontmatter___images
  childMarkdownRemark___frontmatter___images___alt
  childMarkdownRemark___frontmatter___images___caption
  childMarkdownRemark___frontmatter___link___text
  childMarkdownRemark___frontmatter___link___url
  childMarkdownRemark___frontmatter___order
  childMarkdownRemark___frontmatter___organization
  childMarkdownRemark___frontmatter___quote___author
  childMarkdownRemark___frontmatter___quote___content
  childMarkdownRemark___frontmatter___section
  childMarkdownRemark___frontmatter___subProjects
  childMarkdownRemark___frontmatter___subProjects___description
  childMarkdownRemark___frontmatter___subProjects___images
  childMarkdownRemark___frontmatter___subProjects___title
  childMarkdownRemark___frontmatter___tags
  childMarkdownRemark___frontmatter___technology
  childMarkdownRemark___frontmatter___template
  childMarkdownRemark___frontmatter___title
  childMarkdownRemark___frontmatter___titleAndLogo
  childMarkdownRemark___headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___headings___depth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___headings___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___headings___value @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___html @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___htmlAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___id
  childMarkdownRemark___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___rawMarkdownBody @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___wordCount___paragraphs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___wordCount___sentences @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___wordCount___words @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children
  childrenImageSharp
  childrenImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark
  childrenMarkdownRemark___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___excerptAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___fields___childrenGlob @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___fields___orgId @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___fields___slug @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___fields___sourceInstanceName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___fields___template @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___fileAbsolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___frontmatter___images
  childrenMarkdownRemark___frontmatter___images___alt
  childrenMarkdownRemark___frontmatter___images___caption
  childrenMarkdownRemark___frontmatter___link___text
  childrenMarkdownRemark___frontmatter___link___url
  childrenMarkdownRemark___frontmatter___order
  childrenMarkdownRemark___frontmatter___organization
  childrenMarkdownRemark___frontmatter___quote___author
  childrenMarkdownRemark___frontmatter___quote___content
  childrenMarkdownRemark___frontmatter___section
  childrenMarkdownRemark___frontmatter___subProjects
  childrenMarkdownRemark___frontmatter___subProjects___description
  childrenMarkdownRemark___frontmatter___subProjects___images
  childrenMarkdownRemark___frontmatter___subProjects___title
  childrenMarkdownRemark___frontmatter___tags
  childrenMarkdownRemark___frontmatter___technology
  childrenMarkdownRemark___frontmatter___template
  childrenMarkdownRemark___frontmatter___title
  childrenMarkdownRemark___frontmatter___titleAndLogo
  childrenMarkdownRemark___headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___headings___depth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___headings___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___headings___value @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___html @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___htmlAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___id
  childrenMarkdownRemark___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___rawMarkdownBody @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___wordCount___paragraphs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___wordCount___sentences @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___wordCount___words @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  publicURL
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum ImageCropFocus {
  ATTENTION
  CENTER
  EAST
  ENTROPY
  NORTH
  NORTHEAST
  NORTHWEST
  SOUTH
  SOUTHEAST
  SOUTHWEST
  WEST
}

enum ImageFit {
  CONTAIN
  COVER
  FILL
  INSIDE
  OUTSIDE
}

enum ImageFormat {
  AUTO
  AVIF
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum ImageLayout {
  CONSTRAINED
  FIXED
  FULL_WIDTH
}

enum ImagePlaceholder {
  BLURRED
  DOMINANT_COLOR
  NONE
  TRACED_SVG
}

enum ImageSharpFieldsEnum {
  children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum MarkdownExcerptFormats {
  HTML
  MARKDOWN
  PLAIN
}

enum MarkdownHeadingLevels {
  h1
  h2
  h3
  h4
  h5
  h6
}

enum MarkdownRemarkFieldsEnum {
  children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  excerptAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fields___childrenGlob @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fields___orgId @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fields___slug @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fields___sourceInstanceName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fields___template @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fileAbsolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___images
  frontmatter___images___alt
  frontmatter___images___caption
  frontmatter___images___image___absolutePath
  frontmatter___images___image___accessTime
  frontmatter___images___image___atime
  frontmatter___images___image___atimeMs
  frontmatter___images___image___base
  frontmatter___images___image___birthTime
  frontmatter___images___image___birthtime
  frontmatter___images___image___birthtimeMs
  frontmatter___images___image___blksize
  frontmatter___images___image___blocks
  frontmatter___images___image___changeTime
  frontmatter___images___image___children
  frontmatter___images___image___childrenImageSharp
  frontmatter___images___image___childrenMarkdownRemark
  frontmatter___images___image___ctime
  frontmatter___images___image___ctimeMs
  frontmatter___images___image___dev
  frontmatter___images___image___dir
  frontmatter___images___image___ext
  frontmatter___images___image___extension
  frontmatter___images___image___gid
  frontmatter___images___image___id
  frontmatter___images___image___ino
  frontmatter___images___image___mode
  frontmatter___images___image___modifiedTime
  frontmatter___images___image___mtime
  frontmatter___images___image___mtimeMs
  frontmatter___images___image___name
  frontmatter___images___image___nlink
  frontmatter___images___image___prettySize
  frontmatter___images___image___publicURL
  frontmatter___images___image___rdev
  frontmatter___images___image___relativeDirectory
  frontmatter___images___image___relativePath
  frontmatter___images___image___root
  frontmatter___images___image___size
  frontmatter___images___image___sourceInstanceName
  frontmatter___images___image___uid
  frontmatter___link___text
  frontmatter___link___url
  frontmatter___logo___dark___absolutePath
  frontmatter___logo___dark___accessTime
  frontmatter___logo___dark___atime
  frontmatter___logo___dark___atimeMs
  frontmatter___logo___dark___base
  frontmatter___logo___dark___birthTime
  frontmatter___logo___dark___birthtime
  frontmatter___logo___dark___birthtimeMs
  frontmatter___logo___dark___blksize
  frontmatter___logo___dark___blocks
  frontmatter___logo___dark___changeTime
  frontmatter___logo___dark___children
  frontmatter___logo___dark___childrenImageSharp
  frontmatter___logo___dark___childrenMarkdownRemark
  frontmatter___logo___dark___ctime
  frontmatter___logo___dark___ctimeMs
  frontmatter___logo___dark___dev
  frontmatter___logo___dark___dir
  frontmatter___logo___dark___ext
  frontmatter___logo___dark___extension
  frontmatter___logo___dark___gid
  frontmatter___logo___dark___id
  frontmatter___logo___dark___ino
  frontmatter___logo___dark___mode
  frontmatter___logo___dark___modifiedTime
  frontmatter___logo___dark___mtime
  frontmatter___logo___dark___mtimeMs
  frontmatter___logo___dark___name
  frontmatter___logo___dark___nlink
  frontmatter___logo___dark___prettySize
  frontmatter___logo___dark___publicURL
  frontmatter___logo___dark___rdev
  frontmatter___logo___dark___relativeDirectory
  frontmatter___logo___dark___relativePath
  frontmatter___logo___dark___root
  frontmatter___logo___dark___size
  frontmatter___logo___dark___sourceInstanceName
  frontmatter___logo___dark___uid
  frontmatter___logo___light___absolutePath
  frontmatter___logo___light___accessTime
  frontmatter___logo___light___atime
  frontmatter___logo___light___atimeMs
  frontmatter___logo___light___base
  frontmatter___logo___light___birthTime
  frontmatter___logo___light___birthtime
  frontmatter___logo___light___birthtimeMs
  frontmatter___logo___light___blksize
  frontmatter___logo___light___blocks
  frontmatter___logo___light___changeTime
  frontmatter___logo___light___children
  frontmatter___logo___light___childrenImageSharp
  frontmatter___logo___light___childrenMarkdownRemark
  frontmatter___logo___light___ctime
  frontmatter___logo___light___ctimeMs
  frontmatter___logo___light___dev
  frontmatter___logo___light___dir
  frontmatter___logo___light___ext
  frontmatter___logo___light___extension
  frontmatter___logo___light___gid
  frontmatter___logo___light___id
  frontmatter___logo___light___ino
  frontmatter___logo___light___mode
  frontmatter___logo___light___modifiedTime
  frontmatter___logo___light___mtime
  frontmatter___logo___light___mtimeMs
  frontmatter___logo___light___name
  frontmatter___logo___light___nlink
  frontmatter___logo___light___prettySize
  frontmatter___logo___light___publicURL
  frontmatter___logo___light___rdev
  frontmatter___logo___light___relativeDirectory
  frontmatter___logo___light___relativePath
  frontmatter___logo___light___root
  frontmatter___logo___light___size
  frontmatter___logo___light___sourceInstanceName
  frontmatter___logo___light___uid
  frontmatter___order
  frontmatter___organization
  frontmatter___quote___author
  frontmatter___quote___content
  frontmatter___section
  frontmatter___subProjects
  frontmatter___subProjects___description
  frontmatter___subProjects___images
  frontmatter___subProjects___images___alt
  frontmatter___subProjects___images___caption
  frontmatter___subProjects___title
  frontmatter___tags
  frontmatter___technology
  frontmatter___template
  frontmatter___title
  frontmatter___titleAndLogo
  headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  headings___depth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  headings___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  headings___value @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  html @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  htmlAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  id
  internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  rawMarkdownBody @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___paragraphs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___sentences @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___words @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_LEFT
  TURNPOLICY_MAJORITY
  TURNPOLICY_MINORITY
  TURNPOLICY_RIGHT
  TURNPOLICY_WHITE
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum SiteFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  host
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pathPrefix
  polyfill
  port
  siteMetadata___author___email
  siteMetadata___author___name
  siteMetadata___author___url
  siteMetadata___description
  siteMetadata___siteName
  siteMetadata___siteUrl
  siteMetadata___title
}

enum SiteFunctionFieldsEnum {
  absoluteCompiledFilePath
  apiRoute
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  matchPath
  originalFilePath
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  relativeCompiledFilePath
}

enum SitePageFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  component
  componentChunkName
  componentPath
  context___childrenGlob
  context___orgId
  context___slug
  context___sourceInstanceName
  context___template
  id
  internalComponentName
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isCreatedByStatefulCreatePages
  matchPath
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  pluginCreatorId
  pluginCreator___browserAPIs
  pluginCreator___children
  pluginCreator___children___children
  pluginCreator___children___children___children
  pluginCreator___children___children___id
  pluginCreator___children___id
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___children___parent___children
  pluginCreator___children___parent___id
  pluginCreator___id
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___name
  pluginCreator___nodeAPIs
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___description
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreator___packageJson___license
  pluginCreator___packageJson___main
  pluginCreator___packageJson___name
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___version
  pluginCreator___parent___children
  pluginCreator___parent___children___children
  pluginCreator___parent___children___id
  pluginCreator___parent___id
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___parent___parent___children
  pluginCreator___parent___parent___id
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions___allExtensions
  pluginCreator___pluginOptions___base64Width
  pluginCreator___pluginOptions___codegen
  pluginCreator___pluginOptions___codegenConfig___maybeValue
  pluginCreator___pluginOptions___codegenConfig___skipTypename
  pluginCreator___pluginOptions___cssLoaderOptions___esModule
  pluginCreator___pluginOptions___cssLoaderOptions___localIdentName
  pluginCreator___pluginOptions___defaultQuality
  pluginCreator___pluginOptions___delimiters
  pluginCreator___pluginOptions___documentPaths
  pluginCreator___pluginOptions___failOnError
  pluginCreator___pluginOptions___fileName
  pluginCreator___pluginOptions___isTSX
  pluginCreator___pluginOptions___jsxPragma
  pluginCreator___pluginOptions___maxWidth
  pluginCreator___pluginOptions___modulePath
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___pluginOptions___plugins
  pluginCreator___pluginOptions___plugins___browserAPIs
  pluginCreator___pluginOptions___plugins___id
  pluginCreator___pluginOptions___plugins___name
  pluginCreator___pluginOptions___plugins___nodeAPIs
  pluginCreator___pluginOptions___plugins___pluginFilepath
  pluginCreator___pluginOptions___plugins___resolve
  pluginCreator___pluginOptions___plugins___version
  pluginCreator___pluginOptions___prettier
  pluginCreator___pluginOptions___rel
  pluginCreator___pluginOptions___stripMetadata
  pluginCreator___pluginOptions___svgo
  pluginCreator___pluginOptions___target
  pluginCreator___pluginOptions___typeCheck
  pluginCreator___resolve
  pluginCreator___ssrAPIs
  pluginCreator___version
}

enum SitePluginFieldsEnum {
  browserAPIs
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  nodeAPIs
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___description
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___keywords
  packageJson___license
  packageJson___main
  packageJson___name
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___version
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginFilepath
  pluginOptions___allExtensions
  pluginOptions___base64Width
  pluginOptions___codegen
  pluginOptions___codegenConfig___maybeValue
  pluginOptions___codegenConfig___skipTypename
  pluginOptions___cssLoaderOptions___esModule
  pluginOptions___cssLoaderOptions___localIdentName
  pluginOptions___cssLoaderOptions___modules___namedExport
  pluginOptions___defaultQuality
  pluginOptions___delimiters
  pluginOptions___documentPaths
  pluginOptions___failOnError
  pluginOptions___fileName
  pluginOptions___isTSX
  pluginOptions___jsxPragma
  pluginOptions___maxWidth
  pluginOptions___modulePath
  pluginOptions___name
  pluginOptions___path
  pluginOptions___pathCheck
  pluginOptions___plugins
  pluginOptions___plugins___browserAPIs
  pluginOptions___plugins___id
  pluginOptions___plugins___name
  pluginOptions___plugins___nodeAPIs
  pluginOptions___plugins___pluginFilepath
  pluginOptions___plugins___pluginOptions___maxWidth
  pluginOptions___plugins___pluginOptions___rel
  pluginOptions___plugins___pluginOptions___target
  pluginOptions___plugins___resolve
  pluginOptions___plugins___version
  pluginOptions___prettier
  pluginOptions___rel
  pluginOptions___stripMetadata
  pluginOptions___svgo
  pluginOptions___target
  pluginOptions___typeCheck
  resolve
  ssrAPIs
  version
}

enum SortOrderEnum {
  ASC
  DESC
}

input AVIFOptions {
  lossless: Boolean
  quality: Int
  speed: Int
}

input BlurredOptions {
  "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
  toFormat: ImageFormat
  "Width of the generated low-res preview. Default is 20px"
  width: Int
}

input BooleanQueryOperatorInput {
  eq: Boolean
  in: [Boolean]
  ne: Boolean
  nin: [Boolean]
}

input DateQueryOperatorInput {
  eq: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  nin: [Date]
}

input DirectoryFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String!
  opacity: Int
  shadow: String!
}

input FileFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  childImageSharp: ImageSharpFilterInput
  childMarkdownRemark: MarkdownRemarkFilterInput
  children: NodeFilterListInput
  childrenImageSharp: ImageSharpFilterListInput
  childrenMarkdownRemark: MarkdownRemarkFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input ImageSharpFilterInput {
  children: NodeFilterListInput
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  original: ImageSharpOriginalFilterInput
  parent: NodeFilterInput
  resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

input ImageSharpFixedFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  aspectRatio: FloatQueryOperatorInput
  height: IntQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
  eq: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  nin: [Int]
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input JPGOptions {
  progressive: Boolean = true
  quality: Int
}

input JSONQueryOperatorInput {
  eq: JSON
  glob: JSON
  in: [JSON]
  ne: JSON
  nin: [JSON]
  regex: JSON
}

input MarkdownHeadingFilterInput {
  depth: IntQueryOperatorInput
  id: StringQueryOperatorInput
  value: StringQueryOperatorInput
}

input MarkdownHeadingFilterListInput {
  elemMatch: MarkdownHeadingFilterInput
}

input MarkdownRemarkFieldsFilterInput {
  childrenGlob: StringQueryOperatorInput
  orgId: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  template: StringQueryOperatorInput
}

input MarkdownRemarkFilterInput {
  children: NodeFilterListInput
  excerpt: StringQueryOperatorInput
  excerptAst: JSONQueryOperatorInput
  fields: MarkdownRemarkFieldsFilterInput
  fileAbsolutePath: StringQueryOperatorInput
  frontmatter: MarkdownRemarkFrontmatterFilterInput
  headings: MarkdownHeadingFilterListInput
  html: StringQueryOperatorInput
  htmlAst: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  rawMarkdownBody: StringQueryOperatorInput
  tableOfContents: StringQueryOperatorInput
  timeToRead: IntQueryOperatorInput
  wordCount: MarkdownWordCountFilterInput
}

input MarkdownRemarkFilterListInput {
  elemMatch: MarkdownRemarkFilterInput
}

input MarkdownRemarkFrontmatterFilterInput {
  images: MarkdownRemarkFrontmatterImagesFilterListInput
  link: MarkdownRemarkFrontmatterLinkFilterInput
  logo: MarkdownRemarkFrontmatterLogoFilterInput
  order: IntQueryOperatorInput
  organization: StringQueryOperatorInput
  quote: MarkdownRemarkFrontmatterQuoteFilterInput
  section: StringQueryOperatorInput
  subProjects: MarkdownRemarkFrontmatterSubProjectsFilterListInput
  tags: StringQueryOperatorInput
  technology: StringQueryOperatorInput
  template: StringQueryOperatorInput
  title: StringQueryOperatorInput
  titleAndLogo: BooleanQueryOperatorInput
}

input MarkdownRemarkFrontmatterImagesFilterInput {
  alt: StringQueryOperatorInput
  caption: StringQueryOperatorInput
  image: FileFilterInput
}

input MarkdownRemarkFrontmatterImagesFilterListInput {
  elemMatch: MarkdownRemarkFrontmatterImagesFilterInput
}

input MarkdownRemarkFrontmatterLinkFilterInput {
  text: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input MarkdownRemarkFrontmatterLogoFilterInput {
  dark: FileFilterInput
  light: FileFilterInput
}

input MarkdownRemarkFrontmatterQuoteFilterInput {
  author: StringQueryOperatorInput
  content: StringQueryOperatorInput
}

input MarkdownRemarkFrontmatterSubProjectsFilterInput {
  description: StringQueryOperatorInput
  images: MarkdownRemarkFrontmatterSubProjectsImagesFilterListInput
  title: StringQueryOperatorInput
}

input MarkdownRemarkFrontmatterSubProjectsFilterListInput {
  elemMatch: MarkdownRemarkFrontmatterSubProjectsFilterInput
}

input MarkdownRemarkFrontmatterSubProjectsImagesFilterInput {
  alt: StringQueryOperatorInput
  caption: StringQueryOperatorInput
  image: FileFilterInput
}

input MarkdownRemarkFrontmatterSubProjectsImagesFilterListInput {
  elemMatch: MarkdownRemarkFrontmatterSubProjectsImagesFilterInput
}

input MarkdownRemarkSortInput {
  fields: [MarkdownRemarkFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input MarkdownWordCountFilterInput {
  paragraphs: IntQueryOperatorInput
  sentences: IntQueryOperatorInput
  words: IntQueryOperatorInput
}

input NodeFilterInput {
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input PNGOptions {
  compressionSpeed: Int = 4
  quality: Int
}

input Potrace {
  alphaMax: Float
  background: String
  blackOnWhite: Boolean
  color: String
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  turdSize: Float
  turnPolicy: PotraceTurnPolicy
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  host: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  port: IntQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
}

input SiteFunctionFilterInput {
  absoluteCompiledFilePath: StringQueryOperatorInput
  apiRoute: StringQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  matchPath: StringQueryOperatorInput
  originalFilePath: StringQueryOperatorInput
  parent: NodeFilterInput
  relativeCompiledFilePath: StringQueryOperatorInput
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePageContextFilterInput {
  childrenGlob: StringQueryOperatorInput
  orgId: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  template: StringQueryOperatorInput
}

input SitePageFilterInput {
  children: NodeFilterListInput
  component: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  componentPath: StringQueryOperatorInput
  context: SitePageContextFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  internalComponentName: StringQueryOperatorInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  matchPath: StringQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  browserAPIs: StringQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
  parent: NodeFilterInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  resolve: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  description: StringQueryOperatorInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  keywords: StringQueryOperatorInput
  license: StringQueryOperatorInput
  main: StringQueryOperatorInput
  name: StringQueryOperatorInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPluginOptionsCodegenConfigFilterInput {
  maybeValue: StringQueryOperatorInput
  skipTypename: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsCssLoaderOptionsFilterInput {
  esModule: BooleanQueryOperatorInput
  localIdentName: StringQueryOperatorInput
  modules: SitePluginPluginOptionsCssLoaderOptionsModulesFilterInput
}

input SitePluginPluginOptionsCssLoaderOptionsModulesFilterInput {
  namedExport: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsFilterInput {
  allExtensions: BooleanQueryOperatorInput
  base64Width: IntQueryOperatorInput
  codegen: BooleanQueryOperatorInput
  codegenConfig: SitePluginPluginOptionsCodegenConfigFilterInput
  cssLoaderOptions: SitePluginPluginOptionsCssLoaderOptionsFilterInput
  defaultQuality: IntQueryOperatorInput
  delimiters: StringQueryOperatorInput
  documentPaths: StringQueryOperatorInput
  failOnError: BooleanQueryOperatorInput
  fileName: StringQueryOperatorInput
  isTSX: BooleanQueryOperatorInput
  jsxPragma: StringQueryOperatorInput
  maxWidth: IntQueryOperatorInput
  modulePath: StringQueryOperatorInput
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
  plugins: SitePluginPluginOptionsPluginsFilterListInput
  prettier: BooleanQueryOperatorInput
  rel: StringQueryOperatorInput
  stripMetadata: BooleanQueryOperatorInput
  svgo: BooleanQueryOperatorInput
  target: StringQueryOperatorInput
  typeCheck: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsPluginsFilterInput {
  browserAPIs: StringQueryOperatorInput
  id: StringQueryOperatorInput
  name: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsPluginsPluginOptionsFilterInput
  resolve: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPluginOptionsPluginsFilterListInput {
  elemMatch: SitePluginPluginOptionsPluginsFilterInput
}

input SitePluginPluginOptionsPluginsPluginOptionsFilterInput {
  maxWidth: IntQueryOperatorInput
  rel: StringQueryOperatorInput
  target: StringQueryOperatorInput
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataAuthorFilterInput {
  email: StringQueryOperatorInput
  name: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input SiteSiteMetadataFilterInput {
  author: SiteSiteMetadataAuthorFilterInput
  description: StringQueryOperatorInput
  siteName: StringQueryOperatorInput
  siteUrl: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
  eq: String
  glob: String
  in: [String]
  ne: String
  nin: [String]
  regex: String
}

input TransformOptions {
  cropFocus: ImageCropFocus = ATTENTION
  duotone: DuotoneGradient
  fit: ImageFit = COVER
  grayscale: Boolean = false
  rotate: Int = 0
  trim: Float = 0.0
}

input WebPOptions {
  quality: Int
}


"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON
